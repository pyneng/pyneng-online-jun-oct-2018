# -*- coding: utf-8 -*-

'''
Задание 26.2

В этом задании необходимо добавить поддержку протокола итерации в класс Topology из задания 25.1x (класс Topology можно взять из любого задания).

После создания экземпляра класса, экземпляр должен работать как итерируемый объект.
На каждой итерации должен возвращаться кортеж, который описывает одно соединение.


Пример работы класса:

In [8]: t1 = Topology(topology_example)

In [9]: top = iter(t1)

In [10]: next(top)
Out[10]: (('R1', 'Eth0/0'), ('SW1', 'Eth0/1'))

In [11]: next(top)
Out[11]: (('R2', 'Eth0/0'), ('SW1', 'Eth0/2'))

In [12]: next(top)
Out[12]: (('R2', 'Eth0/1'), ('SW2', 'Eth0/11'))

In [13]: top = iter(t1)

In [14]: for link in top:
    ...:     print(link)
    ...:
(('R1', 'Eth0/0'), ('SW1', 'Eth0/1'))
(('R2', 'Eth0/0'), ('SW1', 'Eth0/2'))
(('R2', 'Eth0/1'), ('SW2', 'Eth0/11'))
(('R3', 'Eth0/0'), ('SW1', 'Eth0/3'))
(('R3', 'Eth0/1'), ('R4', 'Eth0/0'))
(('R3', 'Eth0/2'), ('R5', 'Eth0/0'))


Проверить работу класса.
'''

topology_example = {('R1', 'Eth0/0'): ('SW1', 'Eth0/1'),
                    ('R2', 'Eth0/0'): ('SW1', 'Eth0/2'),
                    ('R2', 'Eth0/1'): ('SW2', 'Eth0/11'),
                    ('R3', 'Eth0/0'): ('SW1', 'Eth0/3'),
                    ('R3', 'Eth0/1'): ('R4', 'Eth0/0'),
                    ('R3', 'Eth0/2'): ('R5', 'Eth0/0'),
                    ('SW1', 'Eth0/1'): ('R1', 'Eth0/0'),
                    ('SW1', 'Eth0/2'): ('R2', 'Eth0/0'),
                    ('SW1', 'Eth0/3'): ('R3', 'Eth0/0')}


